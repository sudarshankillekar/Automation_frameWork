<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-25T01:37:00 IST" name="My TestNG TEST" finished-at="2024-03-25T01:37:08 IST" duration-ms="8639">
    <groups>
      <group name="smoke">
        <method signature="CreateJobApiRequest.test_if_data_entered_correctly_in_DB()[pri:0, instance:com.api.tests.CreateJobApiRequest@5af3afd9]" name="test_if_data_entered_correctly_in_DB" class="com.api.tests.CreateJobApiRequest"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="CreateJobApiRequest.test_if_data_entered_correctly_in_DB()[pri:0, instance:com.api.tests.CreateJobApiRequest@5af3afd9]" name="test_if_data_entered_correctly_in_DB" class="com.api.tests.CreateJobApiRequest"/>
      </group> <!-- sanity -->
      <group name="e2e">
        <method signature="CreateJobApiRequest.test_if_data_entered_correctly_in_DB()[pri:0, instance:com.api.tests.CreateJobApiRequest@5af3afd9]" name="test_if_data_entered_correctly_in_DB" class="com.api.tests.CreateJobApiRequest"/>
        <method signature="LoginApiTest.loginApiTest()[pri:0, instance:com.api.tests.LoginApiTest@359f7cdf]" name="loginApiTest" class="com.api.tests.LoginApiTest"/>
      </group> <!-- e2e -->
    </groups>
    <test started-at="2024-03-25T01:37:00 IST" name="My Regression Tests" finished-at="2024-03-25T01:37:08 IST" duration-ms="8639">
      <class name="com.api.tests.SearchJobApiTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.api.tests.SearchJobApiTest@1fa268de]" started-at="2024-03-25T01:37:08 IST" name="setup" description="setting up the base URL for the API using config file" finished-at="2024-03-25T01:37:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginApiTest()[pri:0, instance:com.api.tests.SearchJobApiTest@1fa268de]" started-at="2024-03-25T01:37:08 IST" name="loginApiTest" description="verify login using api request and check message as Success" finished-at="2024-03-25T01:37:08 IST" duration-ms="572" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <401>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.api.tests.SearchJobApiTest.loginApiTest(SearchJobApiTest.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.Runner.Runner.main(Runner.java:38)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApiTest -->
      </class> <!-- com.api.tests.SearchJobApiTest -->
      <class name="com.api.tests.CreateJobApiRequest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.api.tests.CreateJobApiRequest@5af3afd9]" started-at="2024-03-25T01:37:00 IST" name="setup" description="setting up the base URL for the API using config file" finished-at="2024-03-25T01:37:01 IST" duration-ms="878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Test_api_create_joB()[pri:0, instance:com.api.tests.CreateJobApiRequest@5af3afd9]" started-at="2024-03-25T01:37:01 IST" name="Test_api_create_joB" finished-at="2024-03-25T01:37:05 IST" duration-ms="4935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_api_create_joB -->
        <test-method signature="test_if_data_entered_correctly_in_DB()[pri:0, instance:com.api.tests.CreateJobApiRequest@5af3afd9]" started-at="2024-03-25T01:37:05 IST" name="test_if_data_entered_correctly_in_DB" description="Verify customer data entered correctly in db" finished-at="2024-03-25T01:37:07 IST" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_if_data_entered_correctly_in_DB -->
      </class> <!-- com.api.tests.CreateJobApiRequest -->
      <class name="com.api.tests.LoginApiTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.api.tests.LoginApiTest@359f7cdf]" started-at="2024-03-25T01:37:07 IST" name="setup" description="setting up the base URL for the API using config file" finished-at="2024-03-25T01:37:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginApiTest()[pri:0, instance:com.api.tests.LoginApiTest@359f7cdf]" started-at="2024-03-25T01:37:07 IST" name="loginApiTest" description="verify login using api request and check message as Success" finished-at="2024-03-25T01:37:08 IST" duration-ms="1001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApiTest -->
      </class> <!-- com.api.tests.LoginApiTest -->
    </test> <!-- My Regression Tests -->
  </suite> <!-- My TestNG TEST -->
</testng-results>
